name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Auto-cancel superseded runs on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('apt-deps.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install system deps
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends $(cat apt-deps.txt)

      - name: Configure
        run: |
          cmake -S . -B build \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DRLVM_BUILD_TESTS=OFF

      - name: Run clang-tidy
        run: |
          set -euo pipefail
          # Collect C++ sources
          ALL_SRC=$(git ls-files 'src/**/*.cpp')

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Files changed in this PR (against merge base)
            BASE_SHA=$(git merge-base origin/${{ github.base_ref }} HEAD)
            CHANGED=$(git diff --name-only "$BASE_SHA"...HEAD -- 'src/**/*.cpp' | tr '\n' ' ')
            FILES=${CHANGED:-$ALL_SRC}
          else
            FILES=$ALL_SRC
          fi

          # Fallback to all if none detected
          FILES=${FILES:-$ALL_SRC}

          echo "Running clang-tidy on:"
          echo "$FILES"

          run-clang-tidy -p build/ -j"$(nproc)" $FILES -- -std=c++20

      - name: Check formatting with clang-format
        run: |
          git ls-files '*.hpp' '*.h' '*.cpp' '*.cc' -z \
            | xargs -0 clang-format --dry-run --Werror -style=file

  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('apt-deps.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install system deps
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends $(cat apt-deps.txt)

      - name: Enable ccache cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-ccache-${{ github.job }}

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.25'

      - name: Configure (Ninja + ccache)
        run: |
          cmake -S . -B build -G Ninja \
            -DRLVM_BUILD_TESTS=ON \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: |
          cmake --build build --parallel

      - name: Run tests
        working-directory: build
        run: |
          ctest --output-on-failure -j"$(nproc)"
