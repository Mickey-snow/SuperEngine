# Main scons file

import shutil
import sys

Import('env')

########################################################## [ Root environment ]
test_env = env.Clone()
test_env.Append(
  CPPDEFINES = [
    "CASE_SENSITIVE_FILESYSTEM",
    "_THREAD_SAFE"
  ],
  CXXFLAGS = [
    "--ansi",
    "-std=c++17"
  ]
)

test_env.Append(CPPPATH = ["#/test"])

# We need to build gtest/gmock always. Downstream distributors: if you comment
# this out and add a ParseConfig, make sure to do it here in |test_env| instead
# of one of the environments that could link gtest into the main rlvm binary.
test_env.BuildSubcomponent("gtest")
test_env.BuildSubcomponent("gmock")

test_util_files = [
  "test/test_utils.cc",
]

unittest_files = [
  "test/notification_service_unittest.cc",
  "test/gameexe_unittest.cc",
  "test/lazy_array_unittest.cc",
  "test/bitstream_unittest.cc",
  "test/byte_reader_unittest.cc",
  "test/byte_inserter_unittest.cc",
  "test/bytestream_unittest.cc",
  "test/parser_unittest.cc",
  "test/nwa_decoder_unittest.cc",
  "test/wav_decoder_unittest.cc",
  "test/ogg_decoder_unittest.cc",
  "test/mapped_file_unittest.cc",
  "test/asset_scanner_unittest.cc",
  "test/va_factory_unittest.cc",
  "test/lrucache_unittest.cc",
  "test/audio_player_unittest.cc",
  "test/audio_databuf_unittest.cc",
  "test/decoder_factory_unittest.cc",
  "test/tone_curve_unittest.cc",
  "test/lzss_unittest.cc",
  "test/cgmtable_unittest.cc",
  "test/g00dec_unittest.cc",
  "test/geometry_unittest.cc",
  "test/drawer_effect_unittest.cc",
  "test/effect_selrecord_unittest.cc",
  "test/module_manager_unittest.cc",
  "test/platform_factory_unittest.cc",
  "test/scapegoat_unittest.cc",
  "test/mpl_unittest.cc",
  "test/interpolation_unittest.cc",
  "test/graphics_object_unittest.cc",
  "test/parameter_manager_unittest.cc",
  "test/audio_table_unittest.cc",
  "test/stopwatch_unittest.cc",
  "test/codepage_unittest.cpp",
  "test/encodings_unittest.cpp",

  "test/lexer_unittest.cpp",
  "test/stack_unittest.cpp",
  "test/assembler_unittest.cpp",
  "test/property_unittest.cpp",
]

test_env.RlvmProgram('rlvm_unittests',
                     ["test/rlvm_unittests.cc",
		      test_util_files,
                      unittest_files,
                      ],
                     use_lib_set = ["TEST"],
                     rlvm_libs = ["rlvm"])
test_env.Install('$OUTPUT_DIR', 'rlvm_unittests')
